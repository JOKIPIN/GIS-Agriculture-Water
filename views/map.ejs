<!doctype html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="initial-scale=1,user-scalable=no,maximum-scale=1,width=device-width">
        <link rel="stylesheet" href="/data/css/leaflet.css">
        <link rel="stylesheet" href="/data/css/qgis2web.css">
        <link rel="stylesheet" href="/data/css/fontawesome-all.min.css">
        <link rel="stylesheet" href="/data/css/leaflet-control-geocoder.Geocoder.css">
        <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin=""/>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/feather-icons/4.29.2/feather.min.js"></script>
        <script src="https://cdn.tailwindcss.com"></script>
        <style>
        html, body {
            width: 100%;
            height: 100%;
            padding: 0;
            margin: 0;
        }

        /* Sidebar styling */
        .sidebar {
            width: 250px;
            height: 100%;
            background-color: #f4f4f4;
            overflow-y: auto;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            z-index: 1000;
            transition: width 0.3s ease;
            position: fixed;
            top: 0;
            left: 0;
            transform: translateX(0);
        }

        /* Hide sidebar when closed */
        .sidebar.closed {
            width: 0;
            background: #ccc;
            transform: translateX(-250px);
            scrollbar-width: 4px;
            scroll-behavior: smooth;
        }

        #map {
            height: 100%;
            margin-left: 250px;
            transition: margin-left 0.3s ease;
        }

        /* Hide map margin when sidebar is closed */
        #map.closed {
            margin-left: 60px;
        }
        </style>
        <title></title>
    </head>
    <body>
        <!-- SIDEBAR -->
        <div class="sidebar">
            <div class="sidebar-content">
            <div class="top">
                <h2 class="mb-4 text-center" style="font-weight: bold">
                Lampung Selatan
                </h2>
                <img
                src="/assets/img/logo-kabupaten-lampung-selatan-.png"
                alt="Foto Kabupaten"
                style="max-width: 50%; margin: 0 auto; display: block"
                />
                <p style="margin-top: 20px; text-align: justify; font-size: 14px;">
                    Kabupaten Lampung Selatan adalah kabupaten di provinsi Lampung, Indonesia. dengan kabupaten terletak di kecamatan Kalianda. Kabupaten ini punya luas wilayah 715,46 km² & penduduk sebanyak 1.081.115 jiwa, kepadatan 1.500 jiwa/km²
                </p>
                <hr
                style="
                    width: 100%;
                    margin-top: 20px;
                    margin-bottom: 10px;
                    border-top: 1px solid #ccc;
                "
                />
            </div>
    
            <!-- BUTTON SIDEBAR -->
            <div class="button-content">
                <li class="nav-item" style="list-style: none; margin-bottom: 10px">
                <a
                    href="/"
                    class="nav-link"
                    style="
                    display: flex;
                    align-items: center;
                    padding: 10px 20px;
                    border-radius: 5px;
                    color: #000000;
                    text-decoration: none;
                    transition: background-color 0.3s;
                    border: none;
                    font-weight: bold;
                    "
                >
                    <i class="mr-2 size-4" data-feather="home"></i>
                    <p>Beranda</p>
                </a>
                </li>
                <li class="nav-item" style="list-style: none; margin-bottom: 10px">
                <a
                    href="map.html"
                    class="nav-link"
                    style="
                    display: flex;
                    align-items: center;
                    padding: 10px 20px;
                    border-radius: 5px;
                    color: #000000;
                    text-decoration: none;
                    transition: background-color 0.3s;
                    border: none;
                    font-weight: bold;
                    "
                >
                    <i class="mr-2 size-4" data-feather="map-pin"></i>
                    <p>Peta</p>
                </a>
                </li>
            </div>
    
            <!-- LOGIN BUTTON -->
            <div class="logout-button">
                <button
                onclick="Logout()"
                class="btn-logout"
                style="
                    display: flex;
                    width: 100%;
                    align-items: center;
                    justify-content: center;
                    padding: 10px 20px;
                    margin: 20px auto;
                    border-radius: 5px;
                    color: #ffffff;
                    background-color: #df0509;
                    border: none;
                    font-weight: bold;
                    cursor: pointer;
                "
                >
                <i class="mr-2" data-feather="log-out"></i>
                <span class="text-logout">Logout</span>
                </button>
            </div>
            
            </div>
        </div>
  
            <!-- TOGGLE HUMBERGER MENU -->
        <button
                onclick="toggleSidebar()"
                style="position: fixed; top: 20px; left: 20px; z-index: 1001"
            >
            <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            width="24"
            height="24"
            >
            <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M4 6h16M4 12h16m-7 6h7"
            ></path>
            </svg>
        </button>

        <div id="map"></div>

        <script src="../data/js/qgis2web_expressions.js"></script>
        <script src="../data/js/leaflet.js"></script>
        <script src="../data/js/leaflet.rotatedMarker.js"></script>
        <script src="../data/js/leaflet.pattern.js"></script>
        <script src="../data/js/leaflet-hash.js"></script>
        <script src="../data/js/Autolinker.min.js"></script>
        <script src="../data/js/rbush.min.js"></script>
        <script src="../data/js/labelgun.min.js"></script>
        <script src="../data/js/labels.js"></script>
        <script src="../data/js/leaflet-control-geocoder.Geocoder.js"></script>
        <script src="../data/data/AGRIKEBUN_AR_50K_1.js"></script>
        <script src="../data/data/AGRILADANG_AR_50K_2.js"></script>
        <script src="../data/data/AGRISAWAH_AR_50K_3.js"></script>

        <!-- SCRIPT MAPS, ETC -->

        <script>
        var map = L.map('map', {
            zoomControl:true, maxZoom:20, minZoom:2
        })
        var hash = new L.Hash(map);
        map.attributionControl.setPrefix('<a href="https://github.com/tomchadwin/qgis2web" target="_blank">qgis2web</a> &middot; <a href="https://leafletjs.com" title="A JS library for interactive maps">Leaflet</a> &middot; <a href="https://qgis.org">QGIS</a>');
        var autolinker = new Autolinker({truncate: {length: 30, location: 'smart'}});
        function removeEmptyRowsFromPopupContent(content, feature) {
         var tempDiv = document.createElement('div');
         tempDiv.innerHTML = content;
         var rows = tempDiv.querySelectorAll('tr');
         for (var i = 0; i < rows.length; i++) {
             var td = rows[i].querySelector('td.visible-with-data');
             var key = td ? td.id : '';
             if (td && td.classList.contains('visible-with-data') && feature.properties[key] == null) {
                 rows[i].parentNode.removeChild(rows[i]);
             }
         }
         return tempDiv.innerHTML;
        }
        document.querySelector(".leaflet-popup-pane").addEventListener("load", function(event) {
          var tagName = event.target.tagName,
            popup = map._popup;
          // Also check if flag is already set.
          if (tagName === "IMG" && popup && !popup._updated) {
            popup._updated = true; // Set flag to prevent looping.
            popup.update();
          }
        }, true);
        var bounds_group = new L.featureGroup([]);
        function setBounds() {
            if (bounds_group.getLayers().length) {
                map.fitBounds(bounds_group.getBounds());
            }
        }
        map.createPane('pane_OpenStreetMap_0');
        map.getPane('pane_OpenStreetMap_0').style.zIndex = 400;
        var layer_OpenStreetMap_0 = L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
            pane: 'pane_OpenStreetMap_0',
            opacity: 1.0,
            attribution: '',
            minZoom: 1,
            maxZoom: 18,
            minNativeZoom: 0,
            maxNativeZoom: 19
        });
        layer_OpenStreetMap_0;
        map.addLayer(layer_OpenStreetMap_0);
        function pop_AGRIKEBUN_AR_50K_1(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td class="visible-with-data" id="NAMOBJ"colspan="2"><strong>NAMOBJ</strong><br />' + (feature.properties['NAMOBJ'] !== null ? autolinker.link(feature.properties['NAMOBJ'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="JNSKBN"colspan="2"><strong>JNSKBN</strong><br />' + (feature.properties['JNSKBN'] !== null ? autolinker.link(feature.properties['JNSKBN'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="FCODE"colspan="2"><strong>FCODE</strong><br />' + (feature.properties['FCODE'] !== null ? autolinker.link(feature.properties['FCODE'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="PUDATE"colspan="2"><strong>PUDATE</strong><br />' + (feature.properties['PUDATE'] !== null ? autolinker.link(feature.properties['PUDATE'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="AQDATE"colspan="2"><strong>AQDATE</strong><br />' + (feature.properties['AQDATE'] !== null ? autolinker.link(feature.properties['AQDATE'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="REMARK"colspan="2"><strong>REMARK</strong><br />' + (feature.properties['REMARK'] !== null ? autolinker.link(feature.properties['REMARK'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="KODLCO"colspan="2"><strong>KODLCO</strong><br />' + (feature.properties['KODLCO'] !== null ? autolinker.link(feature.properties['KODLCO'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="SRS_ID"colspan="2"><strong>SRS_ID</strong><br />' + (feature.properties['SRS_ID'] !== null ? autolinker.link(feature.properties['SRS_ID'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="LCODE"colspan="2"><strong>LCODE</strong><br />' + (feature.properties['LCODE'] !== null ? autolinker.link(feature.properties['LCODE'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="METADATA"colspan="2"><strong>METADATA</strong><br />' + (feature.properties['METADATA'] !== null ? autolinker.link(feature.properties['METADATA'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="SHAPE_Leng"colspan="2"><strong>SHAPE_Leng</strong><br />' + (feature.properties['SHAPE_Leng'] !== null ? autolinker.link(feature.properties['SHAPE_Leng'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="SHAPE_Area"colspan="2"><strong>SHAPE_Area</strong><br />' + (feature.properties['SHAPE_Area'] !== null ? autolinker.link(feature.properties['SHAPE_Area'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
            var popup = layer.getPopup();
            var content = popup.getContent();
            var updatedContent = removeEmptyRowsFromPopupContent(content, feature);
            popup.setContent(updatedContent);
        }

        function style_AGRIKEBUN_AR_50K_1_0() {
            return {
                pane: 'pane_AGRIKEBUN_AR_50K_1',
                opacity: 1,
                color: 'rgba(128,14,16,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(228,26,28,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_AGRIKEBUN_AR_50K_1');
        map.getPane('pane_AGRIKEBUN_AR_50K_1').style.zIndex = 401;
        map.getPane('pane_AGRIKEBUN_AR_50K_1').style['mix-blend-mode'] = 'normal';
        var layer_AGRIKEBUN_AR_50K_1 = new L.geoJson(json_AGRIKEBUN_AR_50K_1, {
            attribution: '',
            interactive: true,
            dataVar: 'json_AGRIKEBUN_AR_50K_1',
            layerName: 'layer_AGRIKEBUN_AR_50K_1',
            pane: 'pane_AGRIKEBUN_AR_50K_1',
            onEachFeature: pop_AGRIKEBUN_AR_50K_1,
            style: style_AGRIKEBUN_AR_50K_1_0,
        });
        bounds_group.addLayer(layer_AGRIKEBUN_AR_50K_1);
        map.addLayer(layer_AGRIKEBUN_AR_50K_1);
        function pop_AGRILADANG_AR_50K_2(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td class="visible-with-data" id="NAMOBJ"colspan="2"><strong>NAMOBJ</strong><br />' + (feature.properties['NAMOBJ'] !== null ? autolinker.link(feature.properties['NAMOBJ'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="FCODE"colspan="2"><strong>FCODE</strong><br />' + (feature.properties['FCODE'] !== null ? autolinker.link(feature.properties['FCODE'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="REMARK"colspan="2"><strong>REMARK</strong><br />' + (feature.properties['REMARK'] !== null ? autolinker.link(feature.properties['REMARK'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="AQDATE"colspan="2"><strong>AQDATE</strong><br />' + (feature.properties['AQDATE'] !== null ? autolinker.link(feature.properties['AQDATE'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="PUDATE"colspan="2"><strong>PUDATE</strong><br />' + (feature.properties['PUDATE'] !== null ? autolinker.link(feature.properties['PUDATE'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="KODLCO"colspan="2"><strong>KODLCO</strong><br />' + (feature.properties['KODLCO'] !== null ? autolinker.link(feature.properties['KODLCO'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="SRS_ID"colspan="2"><strong>SRS_ID</strong><br />' + (feature.properties['SRS_ID'] !== null ? autolinker.link(feature.properties['SRS_ID'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="LCODE"colspan="2"><strong>LCODE</strong><br />' + (feature.properties['LCODE'] !== null ? autolinker.link(feature.properties['LCODE'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="METADATA"colspan="2"><strong>METADATA</strong><br />' + (feature.properties['METADATA'] !== null ? autolinker.link(feature.properties['METADATA'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="JNSLDG"colspan="2"><strong>JNSLDG</strong><br />' + (feature.properties['JNSLDG'] !== null ? autolinker.link(feature.properties['JNSLDG'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="TNMLDG"colspan="2"><strong>TNMLDG</strong><br />' + (feature.properties['TNMLDG'] !== null ? autolinker.link(feature.properties['TNMLDG'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="TIPLDG"colspan="2"><strong>TIPLDG</strong><br />' + (feature.properties['TIPLDG'] !== null ? autolinker.link(feature.properties['TIPLDG'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="SHAPE_Leng"colspan="2"><strong>SHAPE_Leng</strong><br />' + (feature.properties['SHAPE_Leng'] !== null ? autolinker.link(feature.properties['SHAPE_Leng'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="SHAPE_Area"colspan="2"><strong>SHAPE_Area</strong><br />' + (feature.properties['SHAPE_Area'] !== null ? autolinker.link(feature.properties['SHAPE_Area'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
            var popup = layer.getPopup();
            var content = popup.getContent();
            var updatedContent = removeEmptyRowsFromPopupContent(content, feature);
            popup.setContent(updatedContent);
        }

        function style_AGRILADANG_AR_50K_2_0() {
            return {
                pane: 'pane_AGRILADANG_AR_50K_2',
                opacity: 1,
                color: 'rgba(56,128,54,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(77,175,74,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_AGRILADANG_AR_50K_2');
        map.getPane('pane_AGRILADANG_AR_50K_2').style.zIndex = 402;
        map.getPane('pane_AGRILADANG_AR_50K_2').style['mix-blend-mode'] = 'normal';
        var layer_AGRILADANG_AR_50K_2 = new L.geoJson(json_AGRILADANG_AR_50K_2, {
            attribution: '',
            interactive: true,
            dataVar: 'json_AGRILADANG_AR_50K_2',
            layerName: 'layer_AGRILADANG_AR_50K_2',
            pane: 'pane_AGRILADANG_AR_50K_2',
            onEachFeature: pop_AGRILADANG_AR_50K_2,
            style: style_AGRILADANG_AR_50K_2_0,
        });
        bounds_group.addLayer(layer_AGRILADANG_AR_50K_2);
        map.addLayer(layer_AGRILADANG_AR_50K_2);
        function pop_AGRISAWAH_AR_50K_3(feature, layer) {
            var popupContent = '<table>\
                    <tr>\
                        <td class="visible-with-data" id="NAMOBJ"colspan="2"><strong>NAMOBJ</strong><br />' + (feature.properties['NAMOBJ'] !== null ? autolinker.link(feature.properties['NAMOBJ'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="JNSSWH"colspan="2"><strong>JNSSWH</strong><br />' + (feature.properties['JNSSWH'] !== null ? autolinker.link(feature.properties['JNSSWH'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="FCODE"colspan="2"><strong>FCODE</strong><br />' + (feature.properties['FCODE'] !== null ? autolinker.link(feature.properties['FCODE'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="AQDATE"colspan="2"><strong>AQDATE</strong><br />' + (feature.properties['AQDATE'] !== null ? autolinker.link(feature.properties['AQDATE'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="PUDATE"colspan="2"><strong>PUDATE</strong><br />' + (feature.properties['PUDATE'] !== null ? autolinker.link(feature.properties['PUDATE'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="REMARK"colspan="2"><strong>REMARK</strong><br />' + (feature.properties['REMARK'] !== null ? autolinker.link(feature.properties['REMARK'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="KODLCO"colspan="2"><strong>KODLCO</strong><br />' + (feature.properties['KODLCO'] !== null ? autolinker.link(feature.properties['KODLCO'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="SRS_ID"colspan="2"><strong>SRS_ID</strong><br />' + (feature.properties['SRS_ID'] !== null ? autolinker.link(feature.properties['SRS_ID'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="LCODE"colspan="2"><strong>LCODE</strong><br />' + (feature.properties['LCODE'] !== null ? autolinker.link(feature.properties['LCODE'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="METADATA"colspan="2"><strong>METADATA</strong><br />' + (feature.properties['METADATA'] !== null ? autolinker.link(feature.properties['METADATA'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="TNMSWH"colspan="2"><strong>TNMSWH</strong><br />' + (feature.properties['TNMSWH'] !== null ? autolinker.link(feature.properties['TNMSWH'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="SHAPE_Leng"colspan="2"><strong>SHAPE_Leng</strong><br />' + (feature.properties['SHAPE_Leng'] !== null ? autolinker.link(feature.properties['SHAPE_Leng'].toLocaleString()) : '') + '</td>\
                    </tr>\
                    <tr>\
                        <td class="visible-with-data" id="SHAPE_Area"colspan="2"><strong>SHAPE_Area</strong><br />' + (feature.properties['SHAPE_Area'] !== null ? autolinker.link(feature.properties['SHAPE_Area'].toLocaleString()) : '') + '</td>\
                    </tr>\
                </table>';
            layer.bindPopup(popupContent, {maxHeight: 400});
            var popup = layer.getPopup();
            var content = popup.getContent();
            var updatedContent = removeEmptyRowsFromPopupContent(content, feature);
            popup.setContent(updatedContent);
        }

        function style_AGRISAWAH_AR_50K_3_0() {
            return {
                pane: 'pane_AGRISAWAH_AR_50K_3',
                opacity: 1,
                color: 'rgba(38,89,128,1.0)',
                dashArray: '',
                lineCap: 'butt',
                lineJoin: 'miter',
                weight: 1.0, 
                fill: true,
                fillOpacity: 1,
                fillColor: 'rgba(55,126,184,1.0)',
                interactive: true,
            }
        }
        map.createPane('pane_AGRISAWAH_AR_50K_3');
        map.getPane('pane_AGRISAWAH_AR_50K_3').style.zIndex = 403;
        map.getPane('pane_AGRISAWAH_AR_50K_3').style['mix-blend-mode'] = 'normal';
        var layer_AGRISAWAH_AR_50K_3 = new L.geoJson(json_AGRISAWAH_AR_50K_3, {
            attribution: '',
            interactive: true,
            dataVar: 'json_AGRISAWAH_AR_50K_3',
            layerName: 'layer_AGRISAWAH_AR_50K_3',
            pane: 'pane_AGRISAWAH_AR_50K_3',
            onEachFeature: pop_AGRISAWAH_AR_50K_3,
            style: style_AGRISAWAH_AR_50K_3_0,
        });
        bounds_group.addLayer(layer_AGRISAWAH_AR_50K_3);
        map.addLayer(layer_AGRISAWAH_AR_50K_3);
        var osmGeocoder = new L.Control.Geocoder({
            collapsed: true,
            position: 'topleft',
            text: 'Search',
            title: 'Testing'
        }).addTo(map);
        document.getElementsByClassName('leaflet-control-geocoder-icon')[0]
        .className += ' fa fa-search';
        document.getElementsByClassName('leaflet-control-geocoder-icon')[0]
        .title += 'Search for a place';
        var baseMaps = {};
        L.control.layers(baseMaps,{'<img src="data/legend/AGRISAWAH_AR_50K_3.png" /> AGRISAWAH_AR_50K': layer_AGRISAWAH_AR_50K_3,'<img src="data/legend/AGRILADANG_AR_50K_2.png" /> AGRILADANG_AR_50K': layer_AGRILADANG_AR_50K_2,'<img src="data/legend/AGRIKEBUN_AR_50K_1.png" /> AGRIKEBUN_AR_50K': layer_AGRIKEBUN_AR_50K_1,"OpenStreetMap": layer_OpenStreetMap_0,}).addTo(map);
        setBounds();


        // Function to toggle sidebar
        function toggleSidebar() {
            var sidebar = document.querySelector(".sidebar");
            var mapContainer = document.getElementById("map");
            sidebar.classList.toggle("closed");
            mapContainer.classList.toggle("closed");
        }

        function Logout() {
            window.location.href = "/auth/logout";
        }

        feather.replace()
        </script>
    </body>
</html>
